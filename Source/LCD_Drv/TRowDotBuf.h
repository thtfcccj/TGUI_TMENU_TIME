/*******************************************************************************

                不带字库时，一行（长度*16）点阵缓冲－实现接口
此模块适用于不带字库的LCD显示屏
*******************************************************************************/
#ifndef __T_ROW_DOT_BUF_H
#define __T_ROW_DOT_BUF_H

/****************************************************************************
                     相关配置
****************************************************************************/

//---------------------------定义取方式--------------------------
//取模方式,当前可支持的定义有:
//0:  横向取模,字节正序,即上左横->上右横->下左横->下右横,每字节对应点为左高右低(支持)
//1:  横向取模,字节倒序,即上左横->上右横->下左横->下右横,每字节对应点为左低右高(暂不支持)
//2:  纵向取模,字节正序,即上左纵->上右纵->下左纵->下右纵,每字节对应点为上高下低(暂不支持)
//3:  纵向取模,字节倒序,即上左纵->上右纵->下左纵->下右纵,每字节对应点为上低下高(支持)

#define   T_ROW_DOT_BUF_MODULE    0  //定义取模方式

/****************************************************************************
                     对外接口
****************************************************************************/

//--------------------------初始化函数-----------------------------
//void TRowDotBuf_Init(void);
#define TRowDotBuf_Init() do{}while(0)

//-----------------------得到一块字符点阵缓冲--------------------------
//点阵具体格式：一个全角字16*16为一组成阵列
//取模方式定义为:上左->上右->下左->下右
const unsigned char *TRowDotBuf_pGetBuf(unsigned char w,      //更新长度
                                        const char *pBuf,     //需更新字符
                                        //每个字符对应位置标志,见TWinMng_cbUpdateRow定义
                                        const unsigned char *pFlagBuf);

//---------------------------得到显示缓冲区--------------------------
unsigned char *TRowDotBuf_pGetDispBuf(void);

/****************************************************************************
                    回调函数
****************************************************************************/
//-----------------------得到全角字字模--------------------------
void TRowDotBuf_cbGetWordModule(unsigned char *pBuf, //接收缓冲区
                                unsigned short);   //字码

//-----------------------得到半角字字模--------------------------
void TRowDotBuf_cbGetHalfWordModule(unsigned char *pBuf, //接收缓冲区
                                    unsigned char);    //字码

#endif

