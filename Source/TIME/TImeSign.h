/*****************************************************************************
                         TGUI上的输入法模块-符号输入法部分
*****************************************************************************/
#ifndef __TIME_SIGN_H
#define __TIME_SIGN_H

/*****************************************************************************
                              说明
*****************************************************************************/
//内部显示见TIme_ReadMe.h符号输入法部分
//函数调用流程说明:
//1:切换到符号输入法时，调用初始化函数进行初始化操作
//2:上层进行模块内部字符显示: 根据调用得到行显示字符函数显示对应窗口宽度的
//  一行字符给用户提示。 
//3:用户按翻页键时，调用翻页键响应函数,在响应按键时应刷新内部字符显示。
//4:用户按数字键时，调用按键处理函数响应按键。
//5:得到输入字符串,在按键处理函数后应调用判断是否选择完成函数,在选择完成后，
//  调用得到字符串得到输入字符(该函数复位内部状态机)，否则等待
//6:用户按清除或退出键时，调用清除函数,在返回未响应函数时，可退出字符串状态

/*****************************************************************************
                        相关结构
*****************************************************************************/
#include "TImeBase.h" //TIme_String_t;

//状态机
enum _eTImeSign{
  eTImeSign_Idie = 0,   //空闲状态，即刚进入符号输出法，或进行了翻页后的初始化状态
  eTImeSign_SelV = 1,   //列已被选择状态
  eTImeSign_Final = 2,   //行列已被选择状态,等待用户读取字符
};

struct _TImeSign{
  const char *pSignTbl;  //挂接的符号输入表,全字对齐，为半字时需前面加空格补齐
  unsigned short Len;     //挂接的符号输入表长度
  TIme_String_t PageStart;//标明用户所在页的字符串起始(全角为单位)位置
  unsigned char w;        //字符宽度,全角为单位,为显示宽度 / 4
  unsigned char h;        //字符高度,==显示高度
  enum _eTImeSign eState; //状态机
  unsigned char PosV;     //当前用户选择符号的当前面相对列位置
  unsigned char PosH;     //当前用户选择符号的当前面相对行位置
};

/*****************************************************************************
                        相关函数
*****************************************************************************/

//---------------------------初始化函数---------------------------------
//切换到符号输入法时调用
void TImeSign_Init(struct _TImeSign *pSign,//输入法结构
                   //挂接的符号输入表,全字对齐，为NULL时用默认符号表
                   const char *pSignTbl,
                   unsigned char DispW,        //显示宽度,>16
                   unsigned char DispH);        //显示高度>=3

//----------------------填充行显示字符串函数---------------------------
//返回填充数量
unsigned char TImeSign_GetDispChar(struct _TImeSign *pSign,
                                    char *pBuf,              //被填充的字符
                                    unsigned char VNum);     //列号0-8

//------------------------判断是否选择完成函数---------------------------
//行列均选择结束时将返回完成
//signed char TImeSign_IsFinal(const struct _TImeSign *pSign);
//直接宏实现为:
#define TImeSign_IsFinal(pSign1) ((pSign1)->eState == eTImeSign_Final)

//----------------------得到当前用户选择字符函数---------------------------
//返回当前用户选择的字符,前两位有效
//读取字符后强制返回空闲状态
//注：这里没有限制上层必须在eTImeSign_Final才能获得字符串
const char *TImeSign_pGetChar(struct _TImeSign *pSign);

//-------------------------清除键响应函数---------------------------------
//这里仅用于在已选择某列时取消列选择
//用户按清除或退出键时调用，返回是否已响应了清除键
signed char TImeSign_KeyClr(struct _TImeSign *pSign);

//-----------------------数字键响应函数---------------------------------
//当用户按数字键1-9时响应用户清求
//返回1:响应按键并退出; 0:响应按键未退出
//负值，响应按键值无效
signed char TImeSign_KeyNum(struct _TImeSign *pSign,
                            char KeyNum);//键值，应确保为'1'-'9'

//-----------------------翻页键响应函数---------------------------------
//响应上下翻页清求
//返回是否已响应了用户按键
signed char TImeSign_KeyPage(struct _TImeSign *pSign,
                             signed char DownFlag);//下键标志，否则为上键


#endif //#define __TIME_SIGN_H

